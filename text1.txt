GIT COMMANDS:

1. git init
     - Initializes a new Git repository in the current directory.

2. git clone <repository URL>
      - Creates a copy of a remote repository on your local machine.

3. git add <file(s)>
      - Stages changes for commit. You can specify specific files or use "." to add all changes.

4. git commit -m "Commit message"
      - Records the staged changes with a descriptive message.
      
5. git status
      - Displays the status of your working directory and staged changes.

6. git diff
      - Shows the differences between the working directory and the last commit.

7. git log
      - Displays a log of all commits, including commit hashes, authors, dates, and messages.

8. git branch
      - Lists all branches in the repository and shows the current branch with an asterisk.

9. git checkout <branch>
      - Switches to the specified branch.

10. git checkout -b <new-branch>
      - Creates a new branch and checks it out in a single command.

11. git merge <branch>
      - Merges changes from the specified branch into the current branch.

12. git pull
      - Fetches changes from the remote repository and merges them into the current branch.

13. git push
      - Pushes your local commits to the remote repository.

14. git remote
      - Lists the remote repositories associated with your local repository.

15. git fetch
      - Downloads objects and refs from another repository but does not merge them.

16. git reset
      - Unstages changes or resets the current branch to a specific commit.

17. git rebase
      - Reapplies commits on top of another base commit, often used to incorporate changes from a branch into your current branch.

18. git tag
      - Lists, creates, or deletes tags, which are used to mark specific commits for easy reference.

19. git stash
      - Temporarily saves changes that are not ready to be committed so you can switch branches or perform other operations.

20. git remote add <name> <URL>
      - Adds a new remote repository with the specified name and URL.

These are some of the most commonly used Git commands. Git has many more commands and options for advanced usage and customization. You can access the manual pages for Git commands by running git --help <command> for more detailed information on each command.
